<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.elegantcollection.dao.MessageDao">
  <resultMap id="BaseResultMap" type="com.elegantcollection.entity.Message">
    <id column="message_id" jdbcType="INTEGER" property="messageId" />
    <result column="sender_id" jdbcType="INTEGER" property="senderId" />
    <result column="recipients_id" jdbcType="INTEGER" property="recipientsId" />
    <result column="message_type" jdbcType="INTEGER" property="messageType" />
    <result column="message_time" jdbcType="TIMESTAMP" property="messageTime" />
    <result column="read_status" jdbcType="INTEGER" property="readStatus" />
    <result column="message_img" jdbcType="VARCHAR" property="messageImg" />
    <result column="message_status" jdbcType="INTEGER" property="messageStatus" />
    <result column="message_isimage" jdbcType="INTEGER" property="messageIsimage" />
    <result column="message_withdraw" jdbcType="INTEGER" property="messageWithdraw" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.elegantcollection.entity.Message">
    <result column="message_text" jdbcType="LONGVARCHAR" property="messageText" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    message_id, sender_id, recipients_id, message_type, message_time, read_status, message_img, 
    message_status, message_isimage, message_withdraw
  </sql>
  <sql id="Blob_Column_List">
    `message_text`
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.elegantcollection.entity.MessageExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.elegantcollection.entity.MessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    where message_id = #{messageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message
    where message_id = #{messageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.elegantcollection.entity.MessageExample">
    delete from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.elegantcollection.entity.Message">
    insert into message (message_id, sender_id, recipients_id, 
      message_type, message_time, read_status, 
      message_img, message_status, message_isimage, 
      message_withdraw, `message_text`)
    values (#{messageId,jdbcType=INTEGER}, #{senderId,jdbcType=INTEGER}, #{recipientsId,jdbcType=INTEGER}, 
      #{messageType,jdbcType=INTEGER}, #{messageTime,jdbcType=TIMESTAMP}, #{readStatus,jdbcType=INTEGER}, 
      #{messageImg,jdbcType=VARCHAR}, #{messageStatus,jdbcType=INTEGER}, #{messageIsimage,jdbcType=INTEGER}, 
      #{messageWithdraw,jdbcType=INTEGER}, #{messageText,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.elegantcollection.entity.Message">
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        message_id,
      </if>
      <if test="senderId != null">
        sender_id,
      </if>
      <if test="recipientsId != null">
        recipients_id,
      </if>
      <if test="messageType != null">
        message_type,
      </if>
      <if test="messageTime != null">
        message_time,
      </if>
      <if test="readStatus != null">
        read_status,
      </if>
      <if test="messageImg != null">
        message_img,
      </if>
      <if test="messageStatus != null">
        message_status,
      </if>
      <if test="messageIsimage != null">
        message_isimage,
      </if>
      <if test="messageWithdraw != null">
        message_withdraw,
      </if>
      <if test="messageText != null">
        `message_text`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        #{messageId,jdbcType=INTEGER},
      </if>
      <if test="senderId != null">
        #{senderId,jdbcType=INTEGER},
      </if>
      <if test="recipientsId != null">
        #{recipientsId,jdbcType=INTEGER},
      </if>
      <if test="messageType != null">
        #{messageType,jdbcType=INTEGER},
      </if>
      <if test="messageTime != null">
        #{messageTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readStatus != null">
        #{readStatus,jdbcType=INTEGER},
      </if>
      <if test="messageImg != null">
        #{messageImg,jdbcType=VARCHAR},
      </if>
      <if test="messageStatus != null">
        #{messageStatus,jdbcType=INTEGER},
      </if>
      <if test="messageIsimage != null">
        #{messageIsimage,jdbcType=INTEGER},
      </if>
      <if test="messageWithdraw != null">
        #{messageWithdraw,jdbcType=INTEGER},
      </if>
      <if test="messageText != null">
        #{messageText,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.elegantcollection.entity.MessageExample" resultType="java.lang.Long">
    select count(*) from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update message
    <set>
      <if test="record.messageId != null">
        message_id = #{record.messageId,jdbcType=INTEGER},
      </if>
      <if test="record.senderId != null">
        sender_id = #{record.senderId,jdbcType=INTEGER},
      </if>
      <if test="record.recipientsId != null">
        recipients_id = #{record.recipientsId,jdbcType=INTEGER},
      </if>
      <if test="record.messageType != null">
        message_type = #{record.messageType,jdbcType=INTEGER},
      </if>
      <if test="record.messageTime != null">
        message_time = #{record.messageTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.readStatus != null">
        read_status = #{record.readStatus,jdbcType=INTEGER},
      </if>
      <if test="record.messageImg != null">
        message_img = #{record.messageImg,jdbcType=VARCHAR},
      </if>
      <if test="record.messageStatus != null">
        message_status = #{record.messageStatus,jdbcType=INTEGER},
      </if>
      <if test="record.messageIsimage != null">
        message_isimage = #{record.messageIsimage,jdbcType=INTEGER},
      </if>
      <if test="record.messageWithdraw != null">
        message_withdraw = #{record.messageWithdraw,jdbcType=INTEGER},
      </if>
      <if test="record.messageText != null">
        `message_text` = #{record.messageText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update message
    set message_id = #{record.messageId,jdbcType=INTEGER},
      sender_id = #{record.senderId,jdbcType=INTEGER},
      recipients_id = #{record.recipientsId,jdbcType=INTEGER},
      message_type = #{record.messageType,jdbcType=INTEGER},
      message_time = #{record.messageTime,jdbcType=TIMESTAMP},
      read_status = #{record.readStatus,jdbcType=INTEGER},
      message_img = #{record.messageImg,jdbcType=VARCHAR},
      message_status = #{record.messageStatus,jdbcType=INTEGER},
      message_isimage = #{record.messageIsimage,jdbcType=INTEGER},
      message_withdraw = #{record.messageWithdraw,jdbcType=INTEGER},
      `message_text` = #{record.messageText,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update message
    set message_id = #{record.messageId,jdbcType=INTEGER},
      sender_id = #{record.senderId,jdbcType=INTEGER},
      recipients_id = #{record.recipientsId,jdbcType=INTEGER},
      message_type = #{record.messageType,jdbcType=INTEGER},
      message_time = #{record.messageTime,jdbcType=TIMESTAMP},
      read_status = #{record.readStatus,jdbcType=INTEGER},
      message_img = #{record.messageImg,jdbcType=VARCHAR},
      message_status = #{record.messageStatus,jdbcType=INTEGER},
      message_isimage = #{record.messageIsimage,jdbcType=INTEGER},
      message_withdraw = #{record.messageWithdraw,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.elegantcollection.entity.Message">
    update message
    <set>
      <if test="senderId != null">
        sender_id = #{senderId,jdbcType=INTEGER},
      </if>
      <if test="recipientsId != null">
        recipients_id = #{recipientsId,jdbcType=INTEGER},
      </if>
      <if test="messageType != null">
        message_type = #{messageType,jdbcType=INTEGER},
      </if>
      <if test="messageTime != null">
        message_time = #{messageTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readStatus != null">
        read_status = #{readStatus,jdbcType=INTEGER},
      </if>
      <if test="messageImg != null">
        message_img = #{messageImg,jdbcType=VARCHAR},
      </if>
      <if test="messageStatus != null">
        message_status = #{messageStatus,jdbcType=INTEGER},
      </if>
      <if test="messageIsimage != null">
        message_isimage = #{messageIsimage,jdbcType=INTEGER},
      </if>
      <if test="messageWithdraw != null">
        message_withdraw = #{messageWithdraw,jdbcType=INTEGER},
      </if>
      <if test="messageText != null">
        `message_text` = #{messageText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.elegantcollection.entity.Message">
    update message
    set sender_id = #{senderId,jdbcType=INTEGER},
      recipients_id = #{recipientsId,jdbcType=INTEGER},
      message_type = #{messageType,jdbcType=INTEGER},
      message_time = #{messageTime,jdbcType=TIMESTAMP},
      read_status = #{readStatus,jdbcType=INTEGER},
      message_img = #{messageImg,jdbcType=VARCHAR},
      message_status = #{messageStatus,jdbcType=INTEGER},
      message_isimage = #{messageIsimage,jdbcType=INTEGER},
      message_withdraw = #{messageWithdraw,jdbcType=INTEGER},
      `message_text` = #{messageText,jdbcType=LONGVARCHAR}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.elegantcollection.entity.Message">
    update message
    set sender_id = #{senderId,jdbcType=INTEGER},
      recipients_id = #{recipientsId,jdbcType=INTEGER},
      message_type = #{messageType,jdbcType=INTEGER},
      message_time = #{messageTime,jdbcType=TIMESTAMP},
      read_status = #{readStatus,jdbcType=INTEGER},
      message_img = #{messageImg,jdbcType=VARCHAR},
      message_status = #{messageStatus,jdbcType=INTEGER},
      message_isimage = #{messageIsimage,jdbcType=INTEGER},
      message_withdraw = #{messageWithdraw,jdbcType=INTEGER}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
</mapper>