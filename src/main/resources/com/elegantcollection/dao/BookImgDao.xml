<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.elegantcollection.dao.BookImgDao">
  <resultMap id="BaseResultMap" type="com.elegantcollection.entity.BookImg">
    <id column="book_id" jdbcType="INTEGER" property="bookId" />
    <id column="img_id" jdbcType="INTEGER" property="imgId" />
    <result column="img_address" jdbcType="VARCHAR" property="imgAddress" />
    <result column="redundancy_field" jdbcType="VARCHAR" property="redundancyField" />
    <result column="redundancy_field2" jdbcType="VARCHAR" property="redundancyField2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    book_id, img_id, img_address, redundancy_field, redundancy_field2
  </sql>
  <select id="selectByExample" parameterType="com.elegantcollection.entity.BookImgExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book_img
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.elegantcollection.entity.BookImgKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book_img
    where book_id = #{bookId,jdbcType=INTEGER}
      and img_id = #{imgId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.elegantcollection.entity.BookImgKey">
    delete from book_img
    where book_id = #{bookId,jdbcType=INTEGER}
      and img_id = #{imgId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.elegantcollection.entity.BookImgExample">
    delete from book_img
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.elegantcollection.entity.BookImg">
    insert into book_img (book_id, img_id, img_address, 
      redundancy_field, redundancy_field2)
    values (#{bookId,jdbcType=INTEGER}, #{imgId,jdbcType=INTEGER}, #{imgAddress,jdbcType=VARCHAR}, 
      #{redundancyField,jdbcType=VARCHAR}, #{redundancyField2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.elegantcollection.entity.BookImg">
    insert into book_img
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        book_id,
      </if>
      <if test="imgId != null">
        img_id,
      </if>
      <if test="imgAddress != null">
        img_address,
      </if>
      <if test="redundancyField != null">
        redundancy_field,
      </if>
      <if test="redundancyField2 != null">
        redundancy_field2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="imgId != null">
        #{imgId,jdbcType=INTEGER},
      </if>
      <if test="imgAddress != null">
        #{imgAddress,jdbcType=VARCHAR},
      </if>
      <if test="redundancyField != null">
        #{redundancyField,jdbcType=VARCHAR},
      </if>
      <if test="redundancyField2 != null">
        #{redundancyField2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.elegantcollection.entity.BookImgExample" resultType="java.lang.Long">
    select count(*) from book_img
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book_img
    <set>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.imgId != null">
        img_id = #{record.imgId,jdbcType=INTEGER},
      </if>
      <if test="record.imgAddress != null">
        img_address = #{record.imgAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.redundancyField != null">
        redundancy_field = #{record.redundancyField,jdbcType=VARCHAR},
      </if>
      <if test="record.redundancyField2 != null">
        redundancy_field2 = #{record.redundancyField2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book_img
    set book_id = #{record.bookId,jdbcType=INTEGER},
      img_id = #{record.imgId,jdbcType=INTEGER},
      img_address = #{record.imgAddress,jdbcType=VARCHAR},
      redundancy_field = #{record.redundancyField,jdbcType=VARCHAR},
      redundancy_field2 = #{record.redundancyField2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.elegantcollection.entity.BookImg">
    update book_img
    <set>
      <if test="imgAddress != null">
        img_address = #{imgAddress,jdbcType=VARCHAR},
      </if>
      <if test="redundancyField != null">
        redundancy_field = #{redundancyField,jdbcType=VARCHAR},
      </if>
      <if test="redundancyField2 != null">
        redundancy_field2 = #{redundancyField2,jdbcType=VARCHAR},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=INTEGER}
      and img_id = #{imgId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.elegantcollection.entity.BookImg">
    update book_img
    set img_address = #{imgAddress,jdbcType=VARCHAR},
      redundancy_field = #{redundancyField,jdbcType=VARCHAR},
      redundancy_field2 = #{redundancyField2,jdbcType=VARCHAR}
    where book_id = #{bookId,jdbcType=INTEGER}
      and img_id = #{imgId,jdbcType=INTEGER}
  </update>
</mapper>