<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.elegantcollection.dao.DiscountDao">
  <resultMap id="BaseResultMap" type="com.elegantcollection.entity.Discount">
    <result column="discount_id" jdbcType="INTEGER" property="discountId" />
    <result column="discount_name" jdbcType="VARCHAR" property="discountName" />
    <result column="discount_type" jdbcType="INTEGER" property="discountType" />
    <result column="discount_money" jdbcType="REAL" property="discountMoney" />
    <result column="discount_status" jdbcType="INTEGER" property="discountStatus" />
    <result column="more1" jdbcType="VARCHAR" property="more1" />
    <result column="more2" jdbcType="VARCHAR" property="more2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    discount_id, discount_name, discount_type, discount_money, discount_status, more1, 
    more2
  </sql>
  <select id="selectByExample" parameterType="com.elegantcollection.entity.DiscountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from discount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.elegantcollection.entity.DiscountExample">
    delete from discount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.elegantcollection.entity.Discount">
    insert into discount (discount_id, discount_name, discount_type, 
      discount_money, discount_status, more1, 
      more2)
    values (#{discountId,jdbcType=INTEGER}, #{discountName,jdbcType=VARCHAR}, #{discountType,jdbcType=INTEGER}, 
      #{discountMoney,jdbcType=REAL}, #{discountStatus,jdbcType=INTEGER}, #{more1,jdbcType=VARCHAR}, 
      #{more2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.elegantcollection.entity.Discount">
    insert into discount
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="discountId != null">
        discount_id,
      </if>
      <if test="discountName != null">
        discount_name,
      </if>
      <if test="discountType != null">
        discount_type,
      </if>
      <if test="discountMoney != null">
        discount_money,
      </if>
      <if test="discountStatus != null">
        discount_status,
      </if>
      <if test="more1 != null">
        more1,
      </if>
      <if test="more2 != null">
        more2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="discountId != null">
        #{discountId,jdbcType=INTEGER},
      </if>
      <if test="discountName != null">
        #{discountName,jdbcType=VARCHAR},
      </if>
      <if test="discountType != null">
        #{discountType,jdbcType=INTEGER},
      </if>
      <if test="discountMoney != null">
        #{discountMoney,jdbcType=REAL},
      </if>
      <if test="discountStatus != null">
        #{discountStatus,jdbcType=INTEGER},
      </if>
      <if test="more1 != null">
        #{more1,jdbcType=VARCHAR},
      </if>
      <if test="more2 != null">
        #{more2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.elegantcollection.entity.DiscountExample" resultType="java.lang.Long">
    select count(*) from discount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update discount
    <set>
      <if test="record.discountId != null">
        discount_id = #{record.discountId,jdbcType=INTEGER},
      </if>
      <if test="record.discountName != null">
        discount_name = #{record.discountName,jdbcType=VARCHAR},
      </if>
      <if test="record.discountType != null">
        discount_type = #{record.discountType,jdbcType=INTEGER},
      </if>
      <if test="record.discountMoney != null">
        discount_money = #{record.discountMoney,jdbcType=REAL},
      </if>
      <if test="record.discountStatus != null">
        discount_status = #{record.discountStatus,jdbcType=INTEGER},
      </if>
      <if test="record.more1 != null">
        more1 = #{record.more1,jdbcType=VARCHAR},
      </if>
      <if test="record.more2 != null">
        more2 = #{record.more2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update discount
    set discount_id = #{record.discountId,jdbcType=INTEGER},
      discount_name = #{record.discountName,jdbcType=VARCHAR},
      discount_type = #{record.discountType,jdbcType=INTEGER},
      discount_money = #{record.discountMoney,jdbcType=REAL},
      discount_status = #{record.discountStatus,jdbcType=INTEGER},
      more1 = #{record.more1,jdbcType=VARCHAR},
      more2 = #{record.more2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>